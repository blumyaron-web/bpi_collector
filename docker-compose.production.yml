version: '3.8'

services:
  bpi-collector:
    image: bpi-collector:latest-prod
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: bpi_collector_prod
    restart: unless-stopped
    volumes:
      - bpi-data:/app/data
    environment:
      - SMTP_SERVER=${SMTP_SERVER}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - EMAIL_FROM=${EMAIL_FROM:-${SMTP_USERNAME}}
      - EMAIL_TO=${EMAIL_TO}
      # Collection settings
      - BPI_SAMPLES=${BPI_SAMPLES:-100}
      - BPI_INTERVAL=${BPI_INTERVAL:-300}
    command: ["--samples", "${BPI_SAMPLES:-100}", "--interval", "${BPI_INTERVAL:-300}"]
    healthcheck:
      test: ["CMD", "python", "-c", "import bpi_collector; print('OK')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  dashboard:
    image: bpi-collector:latest-prod
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: bpi_dashboard_prod
    restart: unless-stopped
    ports:
      - "${DASHBOARD_PORT:-8000}:8000"
    volumes:
      - bpi-data:/app/data:ro
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=false
    entrypoint: ["python", "dashboard.py"]
    depends_on:
      - bpi-collector
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  bpi-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_PATH:-./data}

networks:
  default:
    name: bpi-network